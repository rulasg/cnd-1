# This is a basic workflow to help you get started with Actions

name: Sync_Issues

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Allow to be called from a differnt workflow
  workflow_call:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  createIssue:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions: write-all

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get Source Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.RULASG_DOTNET_DEMO_ISSUE_READER_CLIENTID }}
          application_private_key: ${{ secrets.RULASG_DOTNET_DEMO_ISSUE_READER_KEY }}
          organization: octodemo
          revoke_token: true
      
      # load demohelper module
      - name: Module Setup
        uses: rulasg/psmodule-setup-action@v1
        with:
          Name: DemoHelper
          Version: '0.2.0-preview'
      
      - name: Sync issues
        shell: pwsh
        env:
          SOURCE_REPO: rulasg/dotnet-api-demo-template
          SOURCE_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          DEST_REPO: ${{ github.repository }}
          DESTINATION_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
           Import-Module -Name DemoHelper
           # Read Issues from source
           $env:GH_TOKEN = $env:SOURCE_TOKEN
           $issues = Get-IssueDemo -RepoWithOwner $env:SOURCE_REPO -Verbose 

           # Add issues to destination
           $env:GH_TOKEN = $env:DESTINATION_TOKEN
           $issues | Add-IssueDemo -RepoWithOwner $env:DEST_REPO -Verbose
